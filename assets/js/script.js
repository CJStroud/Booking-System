var classes = {};

//removes the parent of the parent of the button
function removeFunction() {
  var id = $(this).attr('id');
  delete classes[id];
  $(this).parent().parent().remove();
}


$(document).ready(function(){

    $('.datepicker').pickadate();

    $('.datepicker').each(function() {
        if ($(this).val()) {
            console.log($(this).val());
            var picker = $(this).pickadate('picker');
            picker.set('select', $(this).val(), { format: 'dd mmmm, yyyy' });
        }
    });
    

    $('.timepicker').pickatime({
        format: 'H:i'
    });
    
    $('.timepicker').each(function() {
        if ($(this).val()) {
            console.log($(this).val());
            var picker = $(this).pickatime('picker');
            picker.set('select', $(this).val(), { format: 'H:i' });
        }
    });

  // stores id of drop down in a hidden textbox
  $('.id-select').change(function() {
    var id = $(this).children(":selected").attr("id");
    $(this).siblings('.hidden-text').val(id);
  });

  $('.id-select').load(function() {
    var id = $(this).children(":selected").attr("id");
    $(this).siblings('.hidden-text').val(id);
  });

  // stores value of drop down in a hidden textbox
  $('.value-select').change(function() {
    var value = $(this).children(":selected").attr("value");
    $(this).siblings('.hidden-text').val(value);
  });

  $('.value-select').load(function() {
    var value = $(this).children(":selected").attr("value");
    $(this).siblings('.hidden-text').val(value);
  });


  $('#btn-add').click(function(){
    // get id of currently selected item
    var optionSelected = $("#class-drop-down option:selected");
    var id = $(optionSelected).attr("id");

    console.log(classes[id]);

    if(classes[id] === '' || classes[id] === undefined) {
        // get selected name
        var name = $(optionSelected).val();
        // generate new class
        var newClass = new Class(id, name, 10);
        classes[String(newClass.id)] = newClass;
        // append html generated by class obj to class container
        $("#class-container").append(newClass.createDOM());

        $('.btn-remove').click(removeFunction);

        
        newClass = new Class(0,0,0);
        newClass.BuildFromObj(JSON.parse(JSON.stringify(classes)));
    }
});

    $('.class-table').on('change', '.input-limit', function(){
        var limit = $(this).val();
        // check input is a integer, if not then focus back
        if(limit == parseInt(limit, 10)){
            classes[$(this).attr('data-id')].limit = parseInt(limit, 10);
        }else{
            $(this).focus();
        }
    });

  $('.btn-submit').click(function(e){
    e.preventDefault();
    
    $('#json-class').val(JSON.stringify(classes));

    $('form').submit();
  });

  var value = $('#json-class').val();
  if(value !== '' && value !== undefined){

    var json_classes = JSON.parse(value);

    // create each class from json file
    for(var json_property in json_classes){
      var newClass = new Class(0,0,0);
      newClass.BuildFromObj(json_classes[json_property]);
      classes[newClass.id] = newClass;
      $("#class-container").append(newClass.createDOM());
    }

  }
  $('.btn-remove').click(removeFunction);
  
  $('.btn-delete-class').click(function () {
      $('#class-id').val($(this).data('class-id'));
  });
  
});
